<div class="modal-overlay @(IsVisible ? "visible" : "")" @onclick="CloseOnOverlayClick">
    <div class="modal-content @(IsVisible ? "visible" : "")" @onclick:stopPropagation="true">
        @if (HasDefaultHeader)
        {
            <div class="modal-header">
                <h3>@Title</h3>
                <button class="close-button" @onclick="Hide">Ã—</button>
            </div>
        }
        <div class="modal-body">
            @ChildContent
        </div>
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; } = "Modal Title";
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public bool HasDefaultHeader { get; set; } = false;
    [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }

    private async Task CloseOnOverlayClick()
    {
        await Hide();
    }

    public async Task Show()
    {
        IsVisible = true;
        await IsVisibleChanged.InvokeAsync(IsVisible);
    }

    public async Task Hide()
    {
        IsVisible = false;
        await IsVisibleChanged.InvokeAsync(IsVisible);
    }
}