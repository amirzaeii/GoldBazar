<div class="@ModalVisibilityClass" tabindex="-1">
    <div class="fixed inset-0 bg-black opacity-70 z-40" @onclick="Close"></div>
    <div class="fixed inset-0 flex items-center justify-center z-50 overflow-hidden">
        <div
            class="bg-white isolate overflow-hidden md:rounded-2xl shadow-xl max-w-lg h-full md:h-[80%] w-full relative">
            <div class="flex items-center justify-between absolute px-2 h-[68px] w-full border-b border-b-[#E9E9E9]">
                <h2 class="text-black text-[18px]">@Title</h2>
                <button class="cursor-pointer" @onclick="Close">
                    <CloseIcon Stroke="#292D32" />
                </button>
            </div>
            @if (ChildContent != null)
            {
                @ChildContent
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public string Title { get; set; } = string.Empty;

    private void Close()
    {
        OnClose.InvokeAsync(null);
    }

    private string ModalVisibilityClass => IsOpen ? "" : "hidden";
}