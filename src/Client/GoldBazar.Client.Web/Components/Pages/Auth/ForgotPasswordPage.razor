@page "/auth/forgot-password"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using GoldBazar.Client.Web.Components.Pages.Auth.Components

<PageTitle>GOLD BAZAR - Forgot Password</PageTitle>

@if (forgotPasswordStep == ForgotPasswordStep.ForgotPasswordForm)
{
    <ForgotPasswordForm OnValidSubmit="onValidForgotPassword" />
}
else
{
    <OTPVerification Mobile="@forgotPasswordModel.Mobile" BackUrl="/auth/forgot-password" TimerInSeconds="60"
        OnCompleted="onValidOTP" OnResendRequested="@(() => ForgotPasswordAsync(forgotPasswordModel))" />
}

@code {
    enum ForgotPasswordStep
    {
        ForgotPasswordForm,
        OTPForm,
    };

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    private ForgotPasswordModel forgotPasswordModel { get; set; } = default!;

    private ForgotPasswordStep forgotPasswordStep { get; set; } = ForgotPasswordStep.ForgotPasswordForm;

    private async Task<FormResult> onValidForgotPassword(ForgotPasswordModel forgotPasswordModel)
    {
        var result = await ForgotPasswordAsync(forgotPasswordModel);
        if (result.Success)
        {
            this.forgotPasswordModel = forgotPasswordModel;
            forgotPasswordStep = ForgotPasswordStep.OTPForm;
            await InvokeAsync(StateHasChanged);
        }

        return result;
    }

    private async Task<FormResult> onValidOTP(string code)
    {
        var result = await OTPAsync(code);
        if (result.Success)
        {
            @* TODO: We assume after valid otp the new password send to user and we redirect it to login page *@
            @* If there are another step for changing password instead of sending it to client we need to add 2 field for get new password *@
            @* Or add a new step for give password and password confirmation *@
            NavigationManager.NavigateTo("/auth/login", forceLoad: true);
        }

        return result;
    }

    public Task<FormResult> ForgotPasswordAsync(ForgotPasswordModel model)
    {
        var errors = new Dictionary<string, string>();

        if (model.Mobile != "1234567890")
        {
            errors.Add(nameof(model.Mobile), "ژمارەی مۆبایل نادروستە.");
        }

        if (errors.Count == 0)
        {
            return Task.FromResult(new FormResult
            {
                Success = true,
                Errors = errors,
                Message = "چوونەژوورەوە سەرکەوتووبوو"
            });
        }

        return Task.FromResult(new FormResult
        {
            Success = false,
            Errors = errors,
            Message = "چوونەژوورەوە ناکام بوو"
        });
    }

    public Task<FormResult> OTPAsync(string code)
    {
        @* TODO: create request base you endpoint and send it *@

        if (code != "7890")
        {
            return Task.FromResult(new FormResult
            {
                Success = false,
                Errors = new(),
                Message = "ئەو کۆدەی داخڵ کراوە هەڵەیە."
            });
        }

        return Task.FromResult(new FormResult
        {
            Success = true,
            Errors = new(),
            Message = "چوونەژوورەوە سەرکەوتووبوو"
        });
    }
}