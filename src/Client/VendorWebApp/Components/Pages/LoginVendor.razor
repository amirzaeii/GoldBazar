@page "/login"
@using VendorWebApp.Components.Layout
@layout EmptyLayout
@inject NavigationManager Nav
@inject IStringLocalizer<Resource> localizer
@rendermode InteractiveServer

<body>
</body>
    <div class="container">
        <div class="logo">
            <img src="Icons/ll4.png" alt="Gold Bazar Logo">
        </div>
        <div class="input-group">
            <label for="code">کۆدەکە بنووسە</label>
            <div>
                <input type="text" id="code" placeholder="4349942-98234423" @bind="Username">
            </div>
        </div>
        <div class="input-group">
            <label for="password">وشەی نهێنی بنووسە</label>
            <div>
                <input type="@PasswordInputType" id="password" placeholder="********" @bind="Password">
                <span class="toggle-password" @onclick="TogglePasswordVisibility">
                    <img src="Icons/eye.svg" />
                </span>
            </div>
        </div>

        <div class="forgot-password">
            <a href="#">هەژمارت نییە؟ پەیوەندی بکە بەگۆلدبازاڕەوە</a>
        </div>
        <button class="submit-btn" @onclick="SubmitLogin">چوونەژوورەوە</button>
    </div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private bool ShowPassword { get; set; } = false;

    private string PasswordInputType => ShowPassword ? "text" : "password";

    private void TogglePasswordVisibility()
    {
        ShowPassword = !ShowPassword;
    }

    private async Task SubmitLogin()
    {
        if (string.IsNullOrWhiteSpace(Username) || string.IsNullOrWhiteSpace(Password))
        {
            await JS.InvokeVoidAsync("alert", "Please fill in all fields");
            return;
        }

        Console.WriteLine($"Login attempt: {Username}, {Password}");

        await JS.InvokeVoidAsync("alert", "Login successful!");
        Nav.NavigateTo("/"); // Or wherever you want to go
    }

    [Inject]
    IJSRuntime JS { get; set; }
}