@page "/"
@using WebComponent.Components.Products
@inject CatalogService catalogservice
<h3>Orders</h3>
    @if (catalogResult is null)
    {
        <p>Loading...</p>
    }
    else
    {
        @foreach (var product in catalogResult.Data)
        {
            <ProductCard Item="product" />
            
        }
         <div class="page-links">
               
        </div>
    }

@code {
    const int PageSize = 40;

    [SupplyParameterFromQuery]
    public int? Page { get; set; }

    [SupplyParameterFromQuery(Name = "type")]
    public int? ItemTypeId { get; set; }

    CatalogResult catalogResult;

    static IEnumerable<int> GetVisiblePageIndexes(CatalogResult result)
        => Enumerable.Range(1, (int)Math.Ceiling(1.0 * result.Count / PageSize));
    protected override async Task OnInitializedAsync()
    {
        catalogResult = await catalogservice.GetCatalogItems(
            Page.GetValueOrDefault(1) - 1,
            PageSize,
            ItemTypeId);
    }

}
