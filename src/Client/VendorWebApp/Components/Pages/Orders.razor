@page "/orders"
@using WebComponent.Components.Pages.Users
@using WebComponent.Components.Products
@inject CatalogService catalogservice
@inject IProductImageUrlProvider ImageProvider
@using Microsoft.AspNetCore.Components.Sections
@inject IStringLocalizer<Resource> localizer
@attribute [StreamRendering]
@inject OrderingService OrderingService
@rendermode InteractiveServer

<PageTitle>Orders</PageTitle>
<SectionContent SectionName="page-header-title">Orders</SectionContent>
<OrderRefreshOnStatusChange />

<div class="container">
    <div class="order-section">
    @if (orders is null)
    {
        <p>Loading...</p>
    }
    else if (orders.Length == 0)
    {
        <p>You haven't yet placed any orders.</p>
    }
    else
    {
      foreach (var order in orders)
            {
                <div class="order-card">
                    <div class="order-header">
                        <span class="order-number">@localizer[nameof(Resource.OrderNoLabel)] @order.OrderNumber</span>
                        <span class="order-status @order.Status.ToLower()">
                            @order.Status
                        </span>
                    </div>
                    <div class="order-body">
                        <div class="info-item">
                            <img src="_content/WebComponent/assets/Icons/user.png" alt="Order Date">
                            <span>user 1</span>
                        </div>
                         <div class="info-item">
                            <img src="_content/WebComponent/assets/Icons/calendar.png" alt="Order Date">
                            <span>@localizer[nameof(Resource.OrderDateLabel)]@order.Date</span>
                        </div>
                        <div class="info-item">
                            <img src="_content/WebComponent/assets/Icons/dollar.png" alt="Price">
                            <span>@localizer[nameof(Resource.TotalPriceLabel)] @order.Total.ToString("0.00")</span>
                        </div>
                    </div>
                    <div>
                        <h5>Order Detail</h5>
                         <button style="background-color:#845dec;color:white;width:100%" @onclick="() => OpenPopup(order.OrderNumber)">
                            Details
                        </button>
                        <hr/>
                          <button style="background-color:green;color:white;width:100%">
                            Approve
                        </button>
                    </div>
                </div>
            
            }
    }        

@if (IsOrderDetailsPopupOpen)
{
    <div class="modal-overlay">
        <div class="modal-container">
            <div class="modal-header">
                <h3>Order Details</h3>
                <button class="modal-close" @onclick="CloseOrderDetailsPopup">âœ–</button>
            </div>

            <div class="modal-body">
                <table class="w-full border-collapse">
                    <thead>
                        <tr>
                            <th class="text-left p-2">#</th>
                            <th class="text-left p-2">Product</th>
                            <th class="text-left p-2">Qty</th>
                            <th class="text-left p-2">Price</th>                            
                        </tr>
                    </thead>
                    <tbody>
                        @if(order == null){ <p>loading...</p>}
                        else{
                            foreach (var item in order.OrderItems)
                            {
                                <tr>
                                    <td>
                                         <div class="product-image">
                                            <img height="100" width="100" src="@ImageProvider.GetProductImageUrl(item.ProductId)">
                                         </div>
                                    </td>
                                    <td class="p-2">@item.ProductName</td>
                                    <td class="p-2">@item.Units</td>
                                    <td class="p-2">@item.UnitPrice.ToString("0.00")</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
   </div>
</div>

@code {
    private OrderRecord[]? orders;
    private OrderDto? order;
    bool IsOrderDetailsPopupOpen;
    protected override async Task OnInitializedAsync()
    {
        orders = await OrderingService.GetOrders();
    }
     private async void OpenPopup(int orderNumber)
    {
        IsOrderDetailsPopupOpen = true;
        order = await OrderingService.GetOrders(orderNumber);
    }

    private void ClosePopup()
    {
        IsOrderDetailsPopupOpen = false;
    }
    private void CloseOrderDetailsPopup()
    {
        IsOrderDetailsPopupOpen = false;
    }
}

