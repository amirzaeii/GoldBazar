@page "/modifyitem"
@page "/modifyitem/{productId:int}"
@using System.Net.Http.Headers
@inject CatalogService _catalogService
@inject IImageService _imageService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Modify Product</PageTitle>
<div>
    <MudPopoverProvider />
    <MudTabs Centered="true" Color="Color.Primary">
        <MudTabPanel Text="Media">
            <ProductUploadImage Files="_images"/>
        </MudTabPanel>
        <MudTabPanel Text="Specifications">
            <ProductSpecification Item="_item" />
        </MudTabPanel>
        <MudTabPanel Text="Pricing">
            <ProductPricing Item="_item" OnSave="HandleSave"/>
        </MudTabPanel>
    </MudTabs>
</div>

@code{
    [Parameter] public int productId { get; set; } = 0;
    private ItemDTO _item = new ItemDTO();
    private IList<FileUploadDTO> _images = default!;
    protected override async Task OnInitializedAsync()
    {
        if (productId > 0)
        {
            _item = await _catalogService.GetCatalogItem(productId);
        }
        else{
            _item = new ItemDTO()
            {
                Id = 0
            };
            _images = new List<FileUploadDTO>();
        }
    }
    private async Task HandleSave(ItemDTO item)
    {
        Console.WriteLine($"Saved product: {item.Caption}");
        bool result = false;
        try
        {
            if(_images.Count == 0)
            {
                Console.WriteLine("No images to upload.");
                return;
            }
            // Save images
            
            var file = _images[0].File;

            var mainPhoto = await _imageService.UploadItemImage(file);
            item.MainPhoto = mainPhoto;
            item.ShopId = 1; // TODO: Get the actual shop ID from the user context
            result = item.Id > 0 ? await _catalogService.EditItem(item) : result = await _catalogService.AddItem(item);
            if(result)
            {                
                NavigationManager.NavigateTo("/profile/shop/1");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving product: {ex.Message}");
        }
    }
}