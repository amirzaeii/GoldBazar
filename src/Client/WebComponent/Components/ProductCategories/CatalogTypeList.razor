@inject CatalogService CatalogService
@inject IProductImageUrlProvider ImageProvider
@inject NavigationManager Nav

    @if (catalogItemTypes == null)
    {
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
    else
    {
        <div class="cat-bg">
            <nav class="categories">
                @foreach (var category in catalogItemTypes)
                {
                <a href="/categories/@category.Id">
                        <div class="category-item">
                            <div class="category-icon">
                                <img src="@ImageProvider.GetTypeImageUrl(category)" alt="@category.Name">
                            </div>
                            <span>@category.Name</span>
                        </div>
                    </a>                     
                }
            </nav>
        </div>
    }

@code { 
    [Parameter]
      public int ItemTypeId { get; set; }
    IEnumerable<CatalogItemType>? catalogItemTypes;

    protected override async Task OnInitializedAsync()
    {
        catalogItemTypes = await CatalogService.GetTypes();
    }
       

        CatalogResult? catalogResult;


        const int PageSize = 40;

        protected override async Task OnParametersSetAsync()
        {
            catalogResult = await CatalogService.GetCatalogItemsByType(
                ItemTypeId,
                0, // Default page index
                PageSize
            );
        }

}
