@inject ICatalogService CatalogService
@inject IProductImageUrlProvider ImageProvider
@inject NavigationManager Nav
@attribute [StreamRendering]

<div class="similar-products">
    <h3 class="section-title">Similar Products</h3>
    <div class="product-grid">
        @if (similarProducts == null)
        {
            <p>Loading...</p>
        }
        else if (!similarProducts.Any())
        {
            <p>No similar products found.</p>
        }
        else
        {
            @foreach (var product in similarProducts)
            {
                <a href="/product/@product.Id" class="product-card">
                    <div class="badge-container">
                        @if (product.Discount > 0)
                        {
                            <div class="badge">
                                <img src="assets/Icons/offerFill.svg" alt="Discount">
                            </div>
                        }
                    </div>
                    <div class="product-image">
                        <img src="@ImageProvider.GetProductImageUrl(product)" alt="@product.Caption">
                    </div>
                    <div class="product-info">
                        <h3 class="product-title">@product.Caption</h3>
                        <div class="price-row">
                            @if (product.Discount > 0)
                            {
                                <span class="original-price">@product.OldPrice.ToString("C")</span>
                            }
                            <span class="current-price">@product.Price.ToString("C")</span>
                        </div>
                        <div class="jeweler-container">
                            <span class="jeweler-name">@product.ShopName</span>
                        </div>
                    </div>
                </a>
            }
        }
    </div>
</div>

@code {
    [Parameter] public int TypeId { get; set; }

    private IEnumerable<CatalogItem> similarProducts = Enumerable.Empty<CatalogItem>();

    protected override async Task OnInitializedAsync()
    {
        similarProducts = await CatalogService.GetSimilarProducts(TypeId);
    }
}
