@page "/product/{id:int}"
@using System.Net.Http
@using Microsoft.AspNetCore.Components.Forms
@inject CatalogService CatalogService
@inject BasketState BasketState
@inject IStringLocalizer<Resource> localizer
@inject NavigationManager Nav
@layout MainLayout

@if (item == null)
{
    <p>Loading...</p>
}
else
{
    @* <header class="header">
            <button class="header_back" onclick="history.go(-1)">
                <img src="_content/WebComponent/assets/Icons/left.svg" alt="Back">
            </button>
        <h1 class="header_title">@item.Caption</h1>
    </header> *@
    <main>
        <ProductGallery ItemId="item.Id" />
        <section class="product-info2">
            <div class="product-info_header">
                <div class="price">
                    @item.Caption
                </div>
                <div class="price">
                    @if (item.Discount > 0)
                    {
                        <span class="price_original">@item.OldPrice.ToString("C")</span>
                    }
                    <span class="price_current">
                        @((item.Price > 0) ? item.Price.ToString("C") : "N/A")
                    </span>
                </div>

                <div class="rating-pill">
                    <span class="rating-pill__value">@item.Rating</span>
                    <img src="_content/WebComponent/assets/Icons/star.svg" alt="Star" class="rating_stars">
                    <span class="rating-pill__divider">|</span>
                    <span class="rating-pill__count">@item.RatingCount</span>
                </div>
            </div>
        </section>
        <div class="specs-container">
            <div class="specs-grid">
                <div class="spec-item">
                    <div class="spec-item__label">@localizer[nameof(Resource.MetalLabel)]:</div>
                    <div class="spec-item__value">@item.MetalName</div>
                </div>
                <div class="spec-item">
                    <div class="spec-item__label">@localizer[nameof(Resource.WeightLabel)]:</div>
                    <div class="spec-item__value">@item.Weight g</div>
                </div>
                <div class="spec-item">
                    <div class="spec-item__label">@localizer[nameof(Resource.PurityLabel)]:</div>
                    <div class="spec-item__value">@item.KT carat</div>
                </div>
            </div>
              <form class="add-to-cart" method="post" @formname="add-to-cart" @onsubmit="@AddToCartAsync" data-enhance="@isLoggedIn">
                <AntiforgeryToken />
                <button class="action-button bold" type="submit">
                    @localizer[nameof(Resource.AddToCartLabel)]
                </button>
            </form>
        </div>

        <StoreInfo ShopId="@item.ShopId" />

        <div class="details bold">
            <div class="details__header">
                <img src="_content/WebComponent/assets/Icons/gold.svg" alt="Gold Icon">
                <span class="details__title">@localizer[nameof(Resource.AestheticLabel)] </span>
            </div>
            <div class="details__grid">
                <div class="details__item">
                    <div class="details__label">@localizer[nameof(Resource.TypeLabel)]</div>
                    <div class="details__value">
                        <span>@item.TypeName</span>
                    </div>
                </div>
                <div class="details__item">
                    <div class="details__label">
                        @localizer[nameof(Resource.StyleLabel)]</div>
                    <div class="details__value">@item.StyleName</div>
                </div>
                <div class="details__item">
                    <div class="details__label">@localizer[nameof(Resource.OccasionLabel)]</div>
                    <div class="details__value">@item.OccasionName</div>
                </div>
            </div>
        </div>

        <div class="tab-container">
            <h3 class="tab-title">@localizer[nameof(Resource.FeaturesLabel)]</h3>
            <ul class="features-grid">
                @if (!string.IsNullOrEmpty(item.Description))
                {
                    @foreach (var feature in item.Description.Split('\n'))
                    {
                        <li class="feature-item">@feature</li>
                    }
                }
                else
                {
                    <p>@localizer[nameof(Resource.NoFeaturesLabel)]</p>
                }
            </ul>
        </div>
        <SimilarProductsList TypeId="@item.TypeId" />
        <WebComponent.Components.Shops.ShopProductsList ShopId="@item.ShopId" ExcludeProductId="@item.Id" />
    </main>
}


@code {
    [Parameter] 
    public int Id { get; set; }
    CatalogItem? item;
    private int numInCart;
    private bool isLoggedIn = true;
    private bool notFound;

    [Parameter]
    public int ItemId { get; set; }

    [CascadingParameter]
    public HttpContent? HttpContext { get; set; }

    protected override async Task OnInitializedAsync()
    {
        item = await CatalogService.GetCatalogItem(Id);
    }
    private async Task AddToCartAsync()
    {
        if (!isLoggedIn)
        {
            Nav.NavigateTo("/login");
            return;
        }

        if (item is not null)
        {
            await BasketState.AddAsync(item);
            await UpdateNumInCartAsync();
        }
    }
    private async Task UpdateNumInCartAsync()
    {
        var items = await BasketState.GetBasketItemsAsync();
        numInCart = items.FirstOrDefault(row => row.ProductId == ItemId)?.Quantity ?? 0;
    }
}

