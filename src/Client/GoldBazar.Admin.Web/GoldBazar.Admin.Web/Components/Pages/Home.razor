@page "/"
@inject CatalogService catalogservice
@inject IProductImageUrlProvider ImageProvider
@using GoldBazar.Shared.Resources
@using Microsoft.AspNetCore.Components.Sections
@using Microsoft.Extensions.Localization
@using WebComponent.Services
@attribute [StreamRendering]
@inject OrderingService OrderingService
@rendermode InteractiveServer

<StatsGrid />
@*  <OrdersTable /> *@

<div class="orders-section">
    <h2 class="section-header">New Orders</h2>
    <table>
        <thead>
            <tr>
                <th>#</th>
                <th>Code</th>
                 <th>Code</th>
                <th>Total Price</th>
                <th>Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if(orders == null || orders.Length == 0)
            {
                <tr>
                    <td colspan="10" class="text-center">No orders available</td>
                </tr>
            }
            else
            {
                foreach (var order in orders)
                {
                    <tr>
                        <td>@order.OrderNumber</td>
                        <td>
                            <button class="trigger-button text-blue-500 underline" @onclick="() => OpenOrderDetailsPopup(order.OrderNumber)">
                                Details
                            </button>
                        </td>

                        <td>@order.Status</td>
                        <td class="delivery-price">@order.Total</td>
                        <td>@order.Date</td>
                        <td class="action-cell">
                            <button class="trigger-button" @onclick="() => OpenPopup()">
                                <img src="sendfill.svg" alt="Send" class="h-6 w-6">
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
@if (IsPopupOpen)
{
    <div class="modal-overlay">
        <div class="modal-container">
            <div class="modal-header">
                <h3>Assign Delivery Personnel</h3>
                <button class="modal-close" @onclick="ClosePopup">✖</button>
            </div>

            <div class="modal-body">
                <label>Name of Deliver</label>
                <input type="text" @bind="DeliveryPersonnel.Name" placeholder="Enter Name">

                <label>Phone Number</label>
                <input type="text" @bind="DeliveryPersonnel.PhoneNumber" placeholder="Enter Phone Number">

                <label>Car Number</label>
                <input type="text" @bind="DeliveryPersonnel.CarNumber" placeholder="Enter Car Number">
            </div>

            <div class="modal-footer">
                <button>Deliver</button>
            </div>
        </div>
    </div>
}

@if (IsOrderDetailsPopupOpen)
{
  <div class="modal-overlay">
        <div class="modal-container">
            <div class="modal-header">
                <h3>Order Details</h3>
                <button class="modal-close" @onclick="CloseOrderDetailsPopup">✖</button>
            </div>

            <div class="modal-body">
                <table class="w-full border-collapse">
                    <thead>
                        <tr>
                            <th class="text-left p-2">#</th>
                            <th class="text-left p-2">Product</th>
                            <th class="text-left p-2">Qty</th>
                            <th class="text-left p-2">Price</th>                            
                        </tr>
                    </thead>
                    <tbody>
                        @if(order == null){ <p>loading...</p>}
                        else{
                            foreach (var item in order.OrderItems)
                            {
                                <tr>
                                    <td>
                                         <div class="product-image">
                                            <img height="100" width="100" src="@ImageProvider.GetProductImageUrl(item.ProductId)">
                                         </div>
                                    </td>
                                    <td class="p-2">@item.ProductName</td>
                                    <td class="p-2">@item.Units</td>
                                    <td class="p-2">@item.UnitPrice.ToString("0.00")</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<OrderStatistics /> 

@code {
    private bool IsOrderDetailsPopupOpen = false;
    private bool IsPopupOpen = false;
    private DeliveryPerson DeliveryPersonnel = new();
   
    private OrderRecord[]? orders;
    private OrderDto? order;
    protected override async Task OnInitializedAsync()
    {
        orders = await OrderingService.GetOrders();
    }
     private async void OpenOrderDetailsPopup(int orderNumber)
    {
        IsOrderDetailsPopupOpen = true;
        order = await OrderingService.GetOrders(orderNumber);
    }
    private void OpenPopup()
    {
        IsPopupOpen = true;
    }
    private void ClosePopup()
    {
        IsPopupOpen = false;
    }
    private void CloseOrderDetailsPopup()
    {
        IsOrderDetailsPopupOpen = false;
    }
    public class DeliveryPerson
    {
        public string Name { get; set; } = "";
        public string PhoneNumber { get; set; } = "";
        public string CarNumber { get; set; } = "";
    }

}
