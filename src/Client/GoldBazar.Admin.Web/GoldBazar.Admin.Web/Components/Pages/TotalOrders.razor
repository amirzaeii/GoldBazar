@page "/totalorders"
@layout EmptyLayout

<div class="header">
    <button class="back-button" onclick="history.go(-1)">
        <img src="back.svg" alt="">
    </button>
    <h1 class="page-title">Total orders</h1>
</div>
<div class="top-filters">
    <div class="filters">
        <div class="search-box">
            <input type="text" @bind="SearchQuery" class="search-input" placeholder="Search for Code, name..">
            <button class="filter-button" @onclick="ToggleFilterPopup">
                <img src="filter.svg" alt=""> Filter
            </button>
        </div>
        <button class="date-picker">
            <img src="calendar.svg" alt=""> @CurrentDate
        </button>
    </div>
    <button class="download-button" @onclick="DownloadData">
        <img src="download.svg" alt=""> Download Data
    </button>
</div>

<div class="stats-cards">
    <div class="stat-card total-orders">
        <div class="stat-info">
            <h3>Total Orders</h3>
            <div class="number">@TotalOrderCount</div>
        </div>
        <div class="stat-icon">
            <img src="product.svg" alt="Total Orders">
        </div>
    </div>
    <div class="stat-card delivered">
        <div class="stat-info">
            <h3>Delivered</h3>
            <div class="number">@DeliveredOrders</div>
        </div>
        <div class="stat-icon">
            <img src="truck.svg" alt="Delivered">
        </div>
    </div>
    <div class="stat-card cancelled">
        <div class="stat-info">
            <h3>Rejected</h3>
            <div class="number">@RejectedOrders</div>
        </div>
        <div class="stat-icon">
            <img src="cross.svg" alt="Rejected">
        </div>
    </div>
</div>

<h2 class="section-header">@CurrentDate</h2>
<table>
    <thead>
        <tr>
            <th>#</th>
            <th>Name</th>
            <th>Code</th>
            <th>Quantity</th>
            <th>Delivery Price</th>
            <th>Total Price</th>
            <th>Date</th>
            <th>Location</th>
            <th>Phone</th>
            <th>Note</th>
            <th>State</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Orders)
        {
            <tr>
                <td>@order.Id</td>
                <td><button class="trigger-button" @onclick="() => OpenOrderDetails(order)">@order.Name</button></td>
                <td>@order.Code</td>
                <td>@order.Quantity</td>
                <td>@order.DeliveryPrice$</td>
                <td>@order.TotalPrice$</td>
                <td>@order.Date</td>
                <td class="location-cell">@order.Location</td>
                <td class="phone-cell">@order.Phone</td>
                <td>@order.Note</td>
                <td>
                    <div class="@GetStateClass(order.State)">
                        @order.State
                    </div>
                </td>

            </tr>
        }
    </tbody>
</table>

@if (ShowFilterPopup)
{
    <div class="overlay">
        <div class="filter-popup">
            <h2 class="popup-title">Filters</h2>
            <button class="close-button" @onclick="ToggleFilterPopup">X</button>
            <button class="filter-button-action apply-button" @onclick="ApplyFilters">Apply Filters</button>
        </div>
    </div>
}

@if (SelectedOrder != null)
{
    <div class="popup-overlay">
        <div class="popup-content">
            <h2 class="popup-title">Order Details</h2>
            <button class="close-button" @onclick="CloseOrderDetails">X</button>
            <table>
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Product</th>
                        <th>Code</th>
                        <th>Price</th>
                        <th>Qty</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in SelectedOrder.Items)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.Product</td>
                            <td>@item.Code</td>
                            <td>@item.Price$</td>
                            <td>@item.Quantity</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
@code {
    private string SearchQuery { get; set; } = "";
    private bool ShowFilterPopup { get; set; } = false;
    private List<Order> Orders { get; set; } = new()
    {
        new Order { Id = 1, Name = "Ring bracelet", Code = "1234", Quantity = 2, DeliveryPrice = 103.44, TotalPrice = 1240, Date = "2/1/2025", Location = "Germany - Berlin", Phone = "770-2345657", Note = "Call me before sending", State = "Delivered", Items = new List<OrderItem> { new OrderItem { Id = 1, Product = "Ring", Code = "2344", Price = 210, Quantity = 1 } } },
        new Order { Id = 2, Name = "Gold Necklace", Code = "5678", Quantity = 1, DeliveryPrice = 200, TotalPrice = 1500, Date = "2/1/2025", Location = "France - Paris", Phone = "770-3456789", Note = "Leave at the reception", State = "On Way", Items = new List<OrderItem> { new OrderItem { Id = 2, Product = "Necklace", Code = "5678", Price = 1500, Quantity = 1 } } }
    };

    private Order? SelectedOrder { get; set; }
    private string CurrentDate => DateTime.Now.ToString("d MMM yyyy");
    private int TotalOrderCount => Orders.Count;
    private int DeliveredOrders => Orders.Count(o => o.State == "Delivered");
    private int RejectedOrders => Orders.Count(o => o.State == "Rejected");

    private void ToggleFilterPopup() => ShowFilterPopup = !ShowFilterPopup;
    private void OpenOrderDetails(Order order) => SelectedOrder = order;
    private void CloseOrderDetails() => SelectedOrder = null;
    private void ApplyFilters() => ShowFilterPopup = false;
    private void DownloadData() { }
    private string GetStateClass(string state)
    {
        return state switch
        {
            "Delivered" => "state-badge state-delivered",
            "On Way" => "state-badge state-onway",
            "Rejected" => "state-badge state-rejected",
            _ => "state-badge"
        };
    }

    private class Order
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Code { get; set; }
        public int Quantity { get; set; }
        public double DeliveryPrice { get; set; }
        public double TotalPrice { get; set; }
        public string Date { get; set; }
        public string Location { get; set; }
        public string Phone { get; set; }
        public string Note { get; set; }
        public string State { get; set; }
        public List<OrderItem> Items { get; set; }
    }

    private class OrderItem
    {
        public int Id { get; set; }
        public string Product { get; set; }
        public string Code { get; set; }
        public double Price { get; set; }
        public int Quantity { get; set; }
    }
}
