@inject IDialogService DialogService

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3" />
            Confirm Deletion
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudAlert Severity="Severity.Warning" Class="my-2">
            <MudText>@Message</MudText>
            <MudText Typo="Typo.subtitle2">This action cannot be undone.</MudText>
        </MudAlert>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Outlined"
                   Color="Color.Default"
                   OnClick="Cancel"
                   StartIcon="@Icons.Material.Filled.Cancel">
            Cancel
        </MudButton>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Error"
                   OnClick="Submit"
                   StartIcon="@Icons.Material.Filled.Delete">
            Delete
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public int Id { get; set; }
    [Parameter] public string Message { get; set; } = default!;
    [Parameter] [EditorRequired] public Func<int, Task>? OnDelete { get; set; }
    private void Cancel()
        => MudDialog.Cancel();

    async Task Submit()
    {
        if(OnDelete != null){
                MudDialog.Close(DialogResult.Ok(true));
                await OnDelete.Invoke(Id);               
            }     
    }   

}
